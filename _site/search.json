[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introduction",
    "section": "",
    "text": "Lead Author and Researcher V Chong-Morrison (Senior Postdoctoral Scientist) \nPrincipal Investigators \nProfessor S Wilson (University College London)  Professor T Sauka-Spengler (University of Oxford/Stowers Institute) \nThis website is a live documentation of the data underlying the following study.\n\n\nLeft/right differences in the brain have fascinated thinkers for generations. Zebrafish genetic tools harnessed within the epithalamus of the forebrain has led to the habenula’s emergence as a powerful paradigm to understand brain lateralisation. During development, the habenula forms bilaterally as a pair of left and right nuclei, along with a medial pineal gland and left-sided parapineal nucleus that emerges from the pineal.\n\n\nA substantial body of research in zebrafish unequivocally identified the parapineal organ (also known as the “parietal eye” in other organisms) as a crucial determinant of habenular left/right asymmetry. Through an unidentified mechanism, the parapineal organ signals to newly-born habenular neurons to adopt “left-sided” characteristics. This elusive signal is potent and precise within a defined developmental time window, from approximately 28 to 32 hours post-fertilisation. Abrogation of the parapineal signal during this event leads to a complete loss of left identity, resulting in a “double right” 4-days-old habenula.\n\n\n\nThe parapineal organ of a zebrafish embryo signals to neurons in the habenula region (dotted circles) circa 32 hours post fertilisation to acquire left/right asymmetric nuclei by 4 days old.\n\n\n\n\n\nZebrafish sox1a mutants have “double right” habenula despite the parapineal forming normally. This finding was important as it uncoupled the parapineal’s signalling function from its anatomical development. Therefore, sox1a mutants can be utilised as a tool to reveal the parapineal signal which is crucial to understanding how habenula neurons acquire left-sided character.\n\n\n\nIdentification of the parapineal signal has previously eluded the field due to non-trivial technical challenges. With fewer than 20 cells per zebrafish embryo, isolating a pure population of parapineal cells of sufficient quality to interrogate their genetic content was monumentally difficult. By combining modern single cell sequencing technologies with prior expertise in characterising small cell populations from zebrafish embryos, I overcame these challenges to illuminate a cohort of biological factors responsible for parapineal function in the context of epithalamic asymmetry.\n \n\n\n\n\n\nI. Lekk, V. Duboc, A. Faro, S. Nicolaou, P. Blader and S.W. Wilson. Sox1a mediates the ability of the parapineal to impart habenular left-right asymmetry. eLife (2019), e47376, 8, https://doi.org/10.7554/eLife.47376\nV. Duboc, P. Dufourcq, P. Blader, and M. Roussigné. Asymmetry of the Brain: Development and Implications. Annual Review of Genetics (2015), 647-672, 49(1), https://doi.org/10.1146/annurev-genet-112414-055322\n\n\n\n\n\nWilson Lab, University College London\nSauka-Spengler Lab, University of Oxford"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#the-parapineal-organ",
    "href": "index.html#the-parapineal-organ",
    "title": "The parapineal organ and development of forebrain asymmetry",
    "section": "The parapineal organ",
    "text": "The parapineal organ\nA substantial body of research in zebrafish unequivocally identified the parapineal organ (also known as the “parietal eye” in other organisms) as a crucial determinant of habenular left/right asymmetry. Through an unidentified mechanism, the parapineal organ signals to newly-born habenular neurons to adopt “left-sided” characteristics. This elusive signal is potent and precise within a defined developmental time window, from 28 to 32 hours post-fertilisation. Abrogation of the parapineal signal during this event leads to a complete loss of left identity, resulting in a “double right” 4-days-old habenula.\n![The parapineal organ of a zebrafish embryo signals to neurons in the habenula region (dotted circles) circa 32 hours post fertilisation to acquire left/right asymmetric nuclei by 4 days old.](asymmetry-dev.png)"
  },
  {
    "objectID": "index.html#the-sox1a-gene",
    "href": "index.html#the-sox1a-gene",
    "title": "The parapineal organ and development of forebrain asymmetry",
    "section": "The sox1a gene",
    "text": "The sox1a gene\nZebrafish sox1a mutants displayed right-isomerised habenular phenotype despite the parapineal forming normally, indicating that its development and putative signalling function is uncoupled. Timed parapineal ablations indicated that this signal is most potent during the first wave of habenular neurogenesis on the left. Therefore, revealing the parapineal signal is crucial to understanding how habenula neurons acquire left-sided character."
  },
  {
    "objectID": "index.html#current-work",
    "href": "index.html#current-work",
    "title": "The parapineal organ and development of forebrain asymmetry",
    "section": "Current work",
    "text": "Current work\nIdentification of the parapineal signal has previously eluded the field due to non-trivial technical challenges. With fewer than 20 cells per zebrafish embryo, isolating a pure population of parapineal cells of sufficient quality to interrogate their genetic content was monumentally difficult. By combining modern single cell sequencing technologies with my prior expertise in characterising small cell populations from zebrafish embryos, I overcame these challenges to illuminate a cohort of biological factors responsible for parapineal function in imparting epithalamic asymmetry."
  },
  {
    "objectID": "index.html#background",
    "href": "index.html#background",
    "title": "Introduction",
    "section": "",
    "text": "Left/right differences in the brain have fascinated thinkers for generations. Zebrafish genetic tools harnessed within the epithalamus of the forebrain has led to the habenula’s emergence as a powerful paradigm to understand brain lateralisation. During development, the habenula forms bilaterally as a pair of left and right nuclei, along with a medial pineal gland and left-sided parapineal nucleus that emerges from the pineal.\n\n\nA substantial body of research in zebrafish unequivocally identified the parapineal organ (also known as the “parietal eye” in other organisms) as a crucial determinant of habenular left/right asymmetry. Through an unidentified mechanism, the parapineal organ signals to newly-born habenular neurons to adopt “left-sided” characteristics. This elusive signal is potent and precise within a defined developmental time window, from approximately 28 to 32 hours post-fertilisation. Abrogation of the parapineal signal during this event leads to a complete loss of left identity, resulting in a “double right” 4-days-old habenula.\n\n\n\nThe parapineal organ of a zebrafish embryo signals to neurons in the habenula region (dotted circles) circa 32 hours post fertilisation to acquire left/right asymmetric nuclei by 4 days old.\n\n\n\n\n\nZebrafish sox1a mutants have “double right” habenula despite the parapineal forming normally. This finding was important as it uncoupled the parapineal’s signalling function from its anatomical development. Therefore, sox1a mutants can be utilised as a tool to reveal the parapineal signal which is crucial to understanding how habenula neurons acquire left-sided character.\n\n\n\nIdentification of the parapineal signal has previously eluded the field due to non-trivial technical challenges. With fewer than 20 cells per zebrafish embryo, isolating a pure population of parapineal cells of sufficient quality to interrogate their genetic content was monumentally difficult. By combining modern single cell sequencing technologies with prior expertise in characterising small cell populations from zebrafish embryos, I overcame these challenges to illuminate a cohort of biological factors responsible for parapineal function in the context of epithalamic asymmetry."
  },
  {
    "objectID": "index.html#key-references",
    "href": "index.html#key-references",
    "title": "Introduction",
    "section": "",
    "text": "I. Lekk, V. Duboc, A. Faro, S. Nicolaou, P. Blader and S.W. Wilson. Sox1a mediates the ability of the parapineal to impart habenular left-right asymmetry. eLife (2019), e47376, 8, https://doi.org/10.7554/eLife.47376\nV. Duboc, P. Dufourcq, P. Blader, and M. Roussigné. Asymmetry of the Brain: Development and Implications. Annual Review of Genetics (2015), 647-672, 49(1), https://doi.org/10.1146/annurev-genet-112414-055322"
  },
  {
    "objectID": "index.html#external-links",
    "href": "index.html#external-links",
    "title": "Introduction",
    "section": "",
    "text": "Wilson Lab, University College London\nSauka-Spengler Lab, University of Oxford"
  },
  {
    "objectID": "session.html",
    "href": "session.html",
    "title": "Session",
    "section": "",
    "text": "I run this at the start of every session as a base. Additional packages are imported in as needed.\n\n##### Set libPaths and memory/parallel cores usage #####\n.libPaths(c(\"/home/chongmorrison/R/x86_64-pc-linux-gnu-library/4.3\",\n            \"/home/chongmorrison/R/4.4.1-Bioc3.19\"))\n.libPaths() # check .libPaths\n\n[1] \"/home/chongmorrison/R/x86_64-pc-linux-gnu-library/4.3\"\n[2] \"/home/chongmorrison/R/4.4.1-Bioc3.19\"                 \n[3] \"/usr/local/lib/R/site-library\"                        \n[4] \"/usr/lib/R/site-library\"                              \n[5] \"/usr/lib/R/library\"                                   \n\noptions(Ncpus = 12) # adjust no. of cores for base R\ngetOption(\"Ncpus\", 1L)\n\n[1] 12\n\nlibrary(future)\noptions(future.globals.maxSize = 2000 * 1024^2) # adjust limit of allowable object size = 2G\n# *could* enable parallelisation i.e. workers &gt; 1, for Seurat etc. \n# but breaks Python processes currently...\nfuture::plan(\"multisession\", workers = 1) # or change back to \"sequential\"\nfuture::plan()\n\nmultisession:\n- args: function (..., workers = 1, envir = parent.frame())\n- tweaked: TRUE\n- call: future::plan(\"multisession\", workers = 1)\n\nlibrary(BiocParallel) # for Bioconductor packages\n\n##### Import analysis packages #####\n# Bug: Python environment may need to be activated before loading Seurat\nlibrary(reticulate)\nconda_list() # check available conda environments\n\n              name\n1             base\n2     cellpose-env\n3       singlecell\n4 singlecell-scHPF\n5      tangram-env\n6      vpt-cp2-env\n7          vpt-env\n                                                           python\n1                       /home/chongmorrison/miniconda3/bin/python\n2     /home/chongmorrison/miniconda3/envs/cellpose-env/bin/python\n3       /home/chongmorrison/miniconda3/envs/singlecell/bin/python\n4 /home/chongmorrison/miniconda3/envs/singlecell-scHPF/bin/python\n5      /home/chongmorrison/miniconda3/envs/tangram-env/bin/python\n6      /home/chongmorrison/miniconda3/envs/vpt-cp2-env/bin/python\n7          /home/chongmorrison/miniconda3/envs/vpt-env/bin/python\n\nuse_condaenv(\"singlecell-scHPF\", required=TRUE) # has leidenalg etc. installed\nlibrary(Seurat)\n\nLoading required package: SeuratObject\n\n\nLoading required package: sp\n\n\n'SeuratObject' was built with package 'Matrix' 1.6.5 but the current\nversion is 1.7.0; it is recomended that you reinstall 'SeuratObject' as\nthe ABI for 'Matrix' may have changed\n\n\n\nAttaching package: 'SeuratObject'\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, t\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dittoSeq)\nlibrary(SingleCellExperiment)\n\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: 'matrixStats'\n\nThe following object is masked from 'package:dplyr':\n\n    count\n\n\nAttaching package: 'MatrixGenerics'\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: 'BiocGenerics'\n\nThe following objects are masked from 'package:lubridate':\n\n    intersect, setdiff, union\n\nThe following objects are masked from 'package:dplyr':\n\n    combine, intersect, setdiff, union\n\nThe following object is masked from 'package:SeuratObject':\n\n    intersect\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n    Position, rank, rbind, Reduce, rownames, sapply, setdiff, table,\n    tapply, union, unique, unsplit, which.max, which.min\n\nLoading required package: S4Vectors\n\nAttaching package: 'S4Vectors'\n\nThe following objects are masked from 'package:lubridate':\n\n    second, second&lt;-\n\nThe following objects are masked from 'package:dplyr':\n\n    first, rename\n\nThe following object is masked from 'package:tidyr':\n\n    expand\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\nLoading required package: IRanges\n\nAttaching package: 'IRanges'\n\nThe following object is masked from 'package:lubridate':\n\n    %within%\n\nThe following objects are masked from 'package:dplyr':\n\n    collapse, desc, slice\n\nThe following object is masked from 'package:purrr':\n\n    reduce\n\nThe following object is masked from 'package:sp':\n\n    %over%\n\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: 'Biobase'\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n\n\nAttaching package: 'SummarizedExperiment'\n\nThe following object is masked from 'package:Seurat':\n\n    Assays\n\nThe following object is masked from 'package:SeuratObject':\n\n    Assays\n\nset.seed(584) # for reproducibility of random sampling"
  },
  {
    "objectID": "session.html#initialise-r-environment",
    "href": "session.html#initialise-r-environment",
    "title": "Session",
    "section": "",
    "text": "I run this at the start of every session as a base. Additional packages are imported in as needed.\n\n##### Set libPaths and memory/parallel cores usage #####\n.libPaths(c(\"/home/chongmorrison/R/x86_64-pc-linux-gnu-library/4.3\",\n            \"/home/chongmorrison/R/4.4.1-Bioc3.19\"))\n.libPaths() # check .libPaths\n\n[1] \"/home/chongmorrison/R/x86_64-pc-linux-gnu-library/4.3\"\n[2] \"/home/chongmorrison/R/4.4.1-Bioc3.19\"                 \n[3] \"/usr/local/lib/R/site-library\"                        \n[4] \"/usr/lib/R/site-library\"                              \n[5] \"/usr/lib/R/library\"                                   \n\noptions(Ncpus = 12) # adjust no. of cores for base R\ngetOption(\"Ncpus\", 1L)\n\n[1] 12\n\nlibrary(future)\noptions(future.globals.maxSize = 2000 * 1024^2) # adjust limit of allowable object size = 2G\n# *could* enable parallelisation i.e. workers &gt; 1, for Seurat etc. \n# but breaks Python processes currently...\nfuture::plan(\"multisession\", workers = 1) # or change back to \"sequential\"\nfuture::plan()\n\nmultisession:\n- args: function (..., workers = 1, envir = parent.frame())\n- tweaked: TRUE\n- call: future::plan(\"multisession\", workers = 1)\n\nlibrary(BiocParallel) # for Bioconductor packages\n\n##### Import analysis packages #####\n# Bug: Python environment may need to be activated before loading Seurat\nlibrary(reticulate)\nconda_list() # check available conda environments\n\n              name\n1             base\n2     cellpose-env\n3       singlecell\n4 singlecell-scHPF\n5      tangram-env\n6      vpt-cp2-env\n7          vpt-env\n                                                           python\n1                       /home/chongmorrison/miniconda3/bin/python\n2     /home/chongmorrison/miniconda3/envs/cellpose-env/bin/python\n3       /home/chongmorrison/miniconda3/envs/singlecell/bin/python\n4 /home/chongmorrison/miniconda3/envs/singlecell-scHPF/bin/python\n5      /home/chongmorrison/miniconda3/envs/tangram-env/bin/python\n6      /home/chongmorrison/miniconda3/envs/vpt-cp2-env/bin/python\n7          /home/chongmorrison/miniconda3/envs/vpt-env/bin/python\n\nuse_condaenv(\"singlecell-scHPF\", required=TRUE) # has leidenalg etc. installed\nlibrary(Seurat)\n\nLoading required package: SeuratObject\n\n\nLoading required package: sp\n\n\n'SeuratObject' was built with package 'Matrix' 1.6.5 but the current\nversion is 1.7.0; it is recomended that you reinstall 'SeuratObject' as\nthe ABI for 'Matrix' may have changed\n\n\n\nAttaching package: 'SeuratObject'\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, t\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dittoSeq)\nlibrary(SingleCellExperiment)\n\nLoading required package: SummarizedExperiment\nLoading required package: MatrixGenerics\nLoading required package: matrixStats\n\nAttaching package: 'matrixStats'\n\nThe following object is masked from 'package:dplyr':\n\n    count\n\n\nAttaching package: 'MatrixGenerics'\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\nLoading required package: GenomicRanges\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: 'BiocGenerics'\n\nThe following objects are masked from 'package:lubridate':\n\n    intersect, setdiff, union\n\nThe following objects are masked from 'package:dplyr':\n\n    combine, intersect, setdiff, union\n\nThe following object is masked from 'package:SeuratObject':\n\n    intersect\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n    Position, rank, rbind, Reduce, rownames, sapply, setdiff, table,\n    tapply, union, unique, unsplit, which.max, which.min\n\nLoading required package: S4Vectors\n\nAttaching package: 'S4Vectors'\n\nThe following objects are masked from 'package:lubridate':\n\n    second, second&lt;-\n\nThe following objects are masked from 'package:dplyr':\n\n    first, rename\n\nThe following object is masked from 'package:tidyr':\n\n    expand\n\nThe following object is masked from 'package:utils':\n\n    findMatches\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\nLoading required package: IRanges\n\nAttaching package: 'IRanges'\n\nThe following object is masked from 'package:lubridate':\n\n    %within%\n\nThe following objects are masked from 'package:dplyr':\n\n    collapse, desc, slice\n\nThe following object is masked from 'package:purrr':\n\n    reduce\n\nThe following object is masked from 'package:sp':\n\n    %over%\n\nLoading required package: GenomeInfoDb\nLoading required package: Biobase\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nAttaching package: 'Biobase'\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n\n\nAttaching package: 'SummarizedExperiment'\n\nThe following object is masked from 'package:Seurat':\n\n    Assays\n\nThe following object is masked from 'package:SeuratObject':\n\n    Assays\n\nset.seed(584) # for reproducibility of random sampling"
  },
  {
    "objectID": "session.html#session-info",
    "href": "session.html#session-info",
    "title": "Session",
    "section": "Session Info",
    "text": "Session Info\n\nsessionInfo()\n\nR version 4.4.1 (2024-06-14)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.5 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8    \n [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8   \n [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/London\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] SingleCellExperiment_1.26.0 SummarizedExperiment_1.34.0\n [3] Biobase_2.64.0              GenomicRanges_1.56.2       \n [5] GenomeInfoDb_1.40.1         IRanges_2.38.1             \n [7] S4Vectors_0.42.1            BiocGenerics_0.50.0        \n [9] MatrixGenerics_1.16.0       matrixStats_1.4.1          \n[11] dittoSeq_1.16.0             lubridate_1.9.3            \n[13] forcats_1.0.0               stringr_1.5.1              \n[15] dplyr_1.1.4                 purrr_1.0.2                \n[17] readr_2.1.5                 tidyr_1.3.1                \n[19] tibble_3.2.1                ggplot2_3.5.1              \n[21] tidyverse_2.0.0             Seurat_5.1.0               \n[23] SeuratObject_5.0.2          sp_2.1-4                   \n[25] reticulate_1.39.0           BiocParallel_1.38.0        \n[27] future_1.34.0              \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3      rstudioapi_0.17.1       jsonlite_1.8.9         \n  [4] magrittr_2.0.3          spatstat.utils_3.1-1    farver_2.1.2           \n  [7] rmarkdown_2.29          zlibbioc_1.50.0         vctrs_0.6.5            \n [10] ROCR_1.0-11             spatstat.explore_3.3-3  S4Arrays_1.4.1         \n [13] htmltools_0.5.8.1       SparseArray_1.4.8       sctransform_0.4.1      \n [16] parallelly_1.38.0       KernSmooth_2.23-24      htmlwidgets_1.6.4      \n [19] ica_1.0-3               plyr_1.8.9              plotly_4.10.4          \n [22] zoo_1.8-12              igraph_2.1.1            mime_0.12              \n [25] lifecycle_1.0.4         pkgconfig_2.0.3         Matrix_1.7-0           \n [28] R6_2.5.1                fastmap_1.2.0           GenomeInfoDbData_1.2.12\n [31] fitdistrplus_1.2-1      shiny_1.9.1             digest_0.6.37          \n [34] colorspace_2.1-1        patchwork_1.3.0         tensor_1.5             \n [37] RSpectra_0.16-2         irlba_2.3.5.1           progressr_0.15.0       \n [40] fansi_1.0.6             spatstat.sparse_3.1-0   timechange_0.3.0       \n [43] httr_1.4.7              polyclip_1.10-7         abind_1.4-8            \n [46] compiler_4.4.1          withr_3.0.2             fastDummies_1.7.4      \n [49] MASS_7.3-61             DelayedArray_0.30.1     rappdirs_0.3.3         \n [52] tools_4.4.1             lmtest_0.9-40           httpuv_1.6.15          \n [55] future.apply_1.11.3     goftest_1.2-3           glue_1.8.0             \n [58] nlme_3.1-165            promises_1.3.0          grid_4.4.1             \n [61] Rtsne_0.17              cluster_2.1.6           reshape2_1.4.4         \n [64] generics_0.1.3          gtable_0.3.6            spatstat.data_3.1-2    \n [67] tzdb_0.4.0              data.table_1.16.2       hms_1.1.3              \n [70] XVector_0.44.0          utf8_1.2.4              spatstat.geom_3.3-3    \n [73] RcppAnnoy_0.0.22        ggrepel_0.9.6           RANN_2.6.2             \n [76] pillar_1.9.0            spam_2.11-0             RcppHNSW_0.6.0         \n [79] later_1.3.2             splines_4.4.1           lattice_0.22-6         \n [82] survival_3.7-0          deldir_2.0-4            tidyselect_1.2.1       \n [85] miniUI_0.1.1.1          pbapply_1.7-2           knitr_1.48             \n [88] gridExtra_2.3           scattermore_1.2         xfun_0.49              \n [91] pheatmap_1.0.12         UCSC.utils_1.0.0        stringi_1.8.4          \n [94] lazyeval_0.2.2          yaml_2.3.10             evaluate_1.0.1         \n [97] codetools_0.2-20        cli_3.6.3               uwot_0.2.2             \n[100] xtable_1.8-4            munsell_0.5.1           Rcpp_1.0.13-1          \n[103] globals_0.16.3          spatstat.random_3.3-2   png_0.1-8              \n[106] spatstat.univar_3.0-1   parallel_4.4.1          dotCall64_1.2          \n[109] listenv_0.9.1           viridisLite_0.4.2       scales_1.3.0           \n[112] ggridges_0.5.6          crayon_1.5.3            leiden_0.4.3.1         \n[115] rlang_1.1.4             cowplot_1.1.3"
  }
]