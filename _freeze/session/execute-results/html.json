{
  "hash": "bbb552269a58a732849be6d7078689a3",
  "result": {
    "markdown": "---\ntitle: \"Session\"\n---\n\n\n## Initialise R environment\n\nI run this at the start of every session as a base.\n\nn.b. Additional packages are imported in as needed.\n\n``` r\n##### Set libPaths and memory/parallel cores usage #####\n.libPaths(c(\"/home/chongmorrison/R/x86_64-pc-linux-gnu-library/4.3\",\n            \"/home/chongmorrison/R/4.4.1-Bioc3.19\"))\n.libPaths() # check .libPaths\n\noptions(Ncpus = 12) # adjust no. of cores for base R\ngetOption(\"Ncpus\", 1L)\n\nlibrary(future)\noptions(future.globals.maxSize = 2000 * 1024^2) # adjust limit of allowable object size = 2G\n# *could* enable parallelisation i.e. workers > 1, for Seurat etc. but breaks Python processes currently...\nfuture::plan(\"multisession\", workers = 1) # or use \"sequential\" mode\nfuture::plan()\n\nlibrary(BiocParallel) # for parallelising Bioconductor packages\n\n##### Import analysis packages #####\n# Potential bug: Python environment needs to be activated before loading Seurat\nlibrary(reticulate)\nconda_list() # check available conda environments\nuse_condaenv(\"singlecell-scHPF\", required=TRUE) # has leidenalg etc. installed\n# R packages\nlibrary(Seurat)\nlibrary(tidyverse)\nlibrary(dittoSeq)\nlibrary(SingleCellExperiment)\nlibrary(grateful)\n\n# set seed for reproducibility of random sampling\nset.seed(584)\n```\n\n## Ensembl annotations\n\nUseful to have gene annotations in CSV format at hand, which can be called into the analysis anytime.\n\n``` r\nlibrary(AnnotationHub)\nlibrary(ensembldb)\n# Connect to AnnotationHub\nah <- AnnotationHub()\n# Access the Ensembl database for organism\nahDb <- query(ah, \n              pattern = c(\"Danio rerio\", \"EnsDb\"), \n              ignore.case = TRUE)\n# Acquire the latest annotation files\nid <- ahDb %>%\n  mcols() %>%\n  rownames() %>%\n  tail(n = 1)\n# Download the appropriate Ensembldb database\nedb <- ah[[id]]\n# Extract gene-level information from database\nannotations <- genes(edb, \n                     return.type = \"data.frame\")\n# Select annotations of interest\nannotations <- annotations %>%\n  dplyr::select(gene_id, gene_name, seq_name, gene_biotype, description)\n# Save for later use\nwrite.csv(annotations, file=\"./annotations/ensembl_annotations.csv\")\n```\n\n## Other databases\n\n## Zebrafish Information Network (ZFIN)\n\n### Gene expression data\n\nZFIN has an excellent curation of *in vivo* expression patterns obtained via WISH (**W**hole-mount **i**n **s**itu **h**ybridisation). As an example, the following code retrieves WISH data for Wild Type condition from <https://zfin.org/downloads> ('Gene Expression' \\> 'Expression data for wildtype fish').\n\n``` r\ngex <- read.delim(url(\"https://zfin.org/downloads/wildtype-expression_fish.txt\"), header = FALSE, sep =\"\\t\")\nhead(gex, 5)\n\n# Add column IDs (based on Column Headers in the Downloads page above)\ncolnames(gex) <- c(\"GeneID\", \"GeneSymbol\",\"FishName\",\"SuperStructureID\",\"SuperStructureName\",\n                   \"SubStructureID\",\"SubStructureName\",\"StartStage\",\"EndStage\",\"Assay\",\n                   \"AssayMMOID\",\"PublicationID\",\"ProbeID\",\"AntibodyID\",\"FishID\")\n```\n\nHere, the data is filtered to only include information-of-interest e.g. Structure i.e. anatomical information.\n\n``` r\ngex_ISH <- gex[which(gex$FishName=='WT' | gex$FishName=='AB/TU'), ]\ngex_ISH <- gex_ISH[which(gex_ISH$Assay=='mRNA in situ hybridization'), ]\ngex_ISH <- data.frame(gex_ISH$GeneSymbol, gex_ISH$SuperStructureName)\ncolnames(gex_ISH) <- c(\"GeneSymbol\",\"Structure\")\nhead(gex_ISH, 10)\n```\n\n### Human orthologue information\n\n``` r\nZFIN_human <- read.delim(url(\"https://zfin.org/downloads/human_orthos.txt\"), header = FALSE, sep =\"\\t\")\nhead(ZFIN_human, 5)\n# retrieve fish and human orthologues\nZFIN_human <- unique(data.frame(ZFIN_human$V2, ZFIN_human$V4))\n# Add column IDs\ncolnames(ZFIN_human) <- c(\"zf_gene\",\"human_gene\")\n```\n\n## References\n\n-   Mary Piper, Meeta Mistry, Jihe Liu, William Gammerdinger, & Radhika Khetani. (2022, January 6). hbctraining/scRNA-seq_online: scRNA-seq Lessons from HCBC (first release). Zenodo. <https://doi.org/10.5281/zenodo.5826256>.\n-   Peter W Harrison, M Ridwan Amode, Olanrewaju Austine-Orimoloye, Andrey G Azov, Matthieu Barba, If Barnes, Arne Becker, Ruth Bennett, Andrew Berry, Jyothish Bhai, Simarpreet Kaur Bhurji, Sanjay Boddu, Paulo R Branco Lins, Lucy Brooks, Shashank Budhanuru Ramaraju, Lahcen I Campbell, Manuel Carbajo Martinez, Mehrnaz Charkhchi, Kapeel Chougule, Alexander Cockburn, Claire Davidson, Nishadi H De Silva, Kamalkumar Dodiya, Sarah Donaldson, Bilal El Houdaigui, Tamara El Naboulsi, Reham Fatima, Carlos Garcia Giron, Thiago Genez, Dionysios Grigoriadis, Gurpreet S Ghattaoraya, Jose Gonzalez Martinez, Tatiana A Gurbich, Matthew Hardy, Zoe Hollis, Thibaut Hourlier, Toby Hunt, Mike Kay, Vinay Kaykala, Tuan Le, Diana Lemos, Disha Lodha, Diego Marques-Coelho, Gareth Maslen, Gabriela Alejandra Merino, Louisse Paola Mirabueno, Aleena Mushtaq, Syed Nakib Hossain, Denye N Ogeh, Manoj Pandian Sakthivel, Anne Parker, Malcolm Perry, Ivana Piližota, Daniel Poppleton, Irina Prosovetskaia, Shriya Raj, José G Pérez-Silva, Ahamed Imran Abdul Salam, Shradha Saraf, Nuno Saraiva-Agostinho, Dan Sheppard, Swati Sinha, Botond Sipos, Vasily Sitnik, William Stark, Emily Steed, Marie-Marthe Suner, Likhitha Surapaneni, Kyösti Sutinen, Francesca Floriana Tricomi, David Urbina-Gómez, Andres Veidenberg, Thomas A Walsh, Doreen Ware, Elizabeth Wass, Natalie L Willhoft, Jamie Allen, Jorge Alvarez-Jarreta, Marc Chakiachvili, Bethany Flint, Stefano Giorgetti, Leanne Haggerty, Garth R Ilsley, Jon Keatley, Jane E Loveland, Benjamin Moore, Jonathan M Mudge, Guy Naamati, John Tate, Stephen J Trevanion, Andrea Winterbottom, Adam Frankish, Sarah E Hunt, Fiona Cunningham, Sarah Dyer, Robert D Finn, Fergal J Martin, and Andrew D Yates. (Ensembl 2024). Nucleic Acids Res. 2024, 52(D1):D891--D899. [10.1093/nar/gkad1049](https://doi.org/10.1093/nar/gkad1049)\n-   Bradford, Y.M., Van Slyke, C.E., Ruzicka, L., Singer, A., Eagle, A., Fashena, D., Howe, D.G., Frazer, K., Martin, R., Paddock, H., Pich, C., Ramachandran, S., Westerfield, M. (2022) Zebrafish Information Network, the knowledgebase for Danio rerio research. Genetics. 220(4). [10.1093/genetics/iyac016](https://doi.org/10.1093/genetics/iyac016)\n\n## Session Info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.4.2 (2024-10-31)\nPlatform: x86_64-pc-linux-gnu\nRunning under: Ubuntu 22.04.5 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8    \n [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8   \n [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/London\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nloaded via a namespace (and not attached):\n [1] compiler_4.4.2    fastmap_1.2.0     cli_3.6.3         tools_4.4.2      \n [5] htmltools_0.5.8.1 yaml_2.3.10       rmarkdown_2.29    knitr_1.49       \n [9] jsonlite_1.8.9    xfun_0.49         digest_0.6.37     rlang_1.1.4      \n[13] evaluate_1.0.1   \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}